"""create_initial_production_schema_v3

Revision ID: 73ffefc9df79
Revises:
Create Date: 2025-07-05 10:38:23.705803

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '73ffefc9df79'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('asset_type', sa.Enum('CRYPTO', 'FOREX', 'STOCK', 'ETF', 'COMMODITY', 'INDEX', 'UNKNOWN', name='assettype'), nullable=True),
    sa.Column('exchange', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_asset_exchange', 'assets', ['exchange'], unique=False)
    op.create_index('ix_asset_symbol', 'assets', ['symbol'], unique=True)
    op.create_index('ix_asset_type', 'assets', ['asset_type'], unique=False)
    op.create_index(op.f('ix_assets_asset_type'), 'assets', ['asset_type'], unique=False)
    op.create_index(op.f('ix_assets_deleted_at'), 'assets', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_assets_exchange'), 'assets', ['exchange'], unique=False)
    op.create_index(op.f('ix_assets_id'), 'assets', ['id'], unique=False)
    op.create_index(op.f('ix_assets_symbol'), 'assets', ['symbol'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_email', 'users', ['email'], unique=False)
    op.create_index('ix_user_username', 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_deleted_at'), 'users', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('price_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('open', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('high', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('low', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('close', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('volume', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_price_data_asset_id_timestamp_source', 'price_data', ['asset_id', 'timestamp', 'source'], unique=True)
    op.create_index(op.f('ix_price_data_id'), 'price_data', ['id'], unique=False)
    op.create_index(op.f('ix_price_data_source'), 'price_data', ['source'], unique=False)
    op.create_index('ix_price_data_timestamp', 'price_data', ['timestamp'], unique=False)
    op.create_table('strategies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('model_version', sa.String(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_strategies_deleted_at'), 'strategies', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_strategies_id'), 'strategies', ['id'], unique=False)
    op.create_index(op.f('ix_strategies_name'), 'strategies', ['name'], unique=False)
    op.create_index(op.f('ix_strategies_user_id'), 'strategies', ['user_id'], unique=False)
    op.create_index('ix_strategy_name', 'strategies', ['name'], unique=False)
    op.create_index('ix_strategy_user_id_name', 'strategies', ['user_id', 'name'], unique=True)
    op.create_table('backtest_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('strategy_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('initial_capital', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('final_capital', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('total_pnl', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('pnl_percentage', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('total_trades', sa.Integer(), nullable=False),
    sa.Column('winning_trades', sa.Integer(), nullable=False),
    sa.Column('losing_trades', sa.Integer(), nullable=False),
    sa.Column('neutral_trades', sa.Integer(), nullable=True),
    sa.Column('win_rate', sa.Numeric(precision=7, scale=4), nullable=True),
    sa.Column('max_drawdown_abs', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.Column('max_drawdown_pct', sa.Numeric(precision=7, scale=4), nullable=True),
    sa.Column('sharpe_ratio', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('sortino_ratio', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('calmar_ratio', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('avg_trade_pnl', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.Column('avg_winning_trade', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.Column('avg_losing_trade', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.Column('profit_factor', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('parameters_used', sa.JSON(), nullable=True),
    sa.Column('trade_log_summary', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_backtest_result_strategy_id_created_at', 'backtest_results', ['strategy_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_backtest_results_created_at'), 'backtest_results', ['created_at'], unique=False)
    op.create_index(op.f('ix_backtest_results_id'), 'backtest_results', ['id'], unique=False)
    op.create_index(op.f('ix_backtest_results_strategy_id'), 'backtest_results', ['strategy_id'], unique=False)
    op.create_table('signals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('strategy_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('signal_type', sa.Enum('BUY', 'SELL', 'HOLD', 'STRONG_BUY', 'STRONG_SELL', name='signaltype'), nullable=False),
    sa.Column('confidence_score', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('price_at_signal', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_signal_asset_strategy_timestamp', 'signals', ['asset_id', 'strategy_id', 'timestamp'], unique=False)
    op.create_index('ix_signal_strategy_timestamp', 'signals', ['strategy_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_signals_deleted_at'), 'signals', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_signals_id'), 'signals', ['id'], unique=False)
    op.create_index(op.f('ix_signals_signal_type'), 'signals', ['signal_type'], unique=False)
    op.create_index(op.f('ix_signals_timestamp'), 'signals', ['timestamp'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('strategy_id', sa.Integer(), nullable=True),
    sa.Column('signal_id', sa.Integer(), nullable=True),
    sa.Column('order_type', sa.Enum('MARKET', 'LIMIT', 'STOP_MARKET', 'STOP_LIMIT', 'TAKE_PROFIT_MARKET', 'TAKE_PROFIT_LIMIT', 'TRAILING_STOP', name='ordertype'), nullable=False),
    sa.Column('order_side', sa.Enum('BUY', 'SELL', name='orderside'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'NEW', 'OPEN', 'FILLED', 'PARTIALLY_FILLED', 'CANCELLED', 'REJECTED', 'EXPIRED', 'FAILED', name='orderstatus'), nullable=False),
    sa.Column('quantity_requested', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('quantity_filled', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.Column('limit_price', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.Column('stop_price', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.Column('average_fill_price', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.Column('commission_paid', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.Column('exchange_order_id', sa.String(), nullable=True),
    sa.Column('client_order_id', sa.String(), nullable=True),
    sa.Column('is_simulated', sa.Boolean(), nullable=False),
    sa.Column('time_in_force', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['signal_id'], ['signals.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_order_asset_status', 'orders', ['asset_id', 'status'], unique=False)
    op.create_index('ix_order_exchange_id', 'orders', ['exchange_order_id'], unique=False)
    op.create_index('ix_order_user_status', 'orders', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_orders_asset_id'), 'orders', ['asset_id'], unique=False)
    op.create_index(op.f('ix_orders_client_order_id'), 'orders', ['client_order_id'], unique=False)
    op.create_index(op.f('ix_orders_created_at'), 'orders', ['created_at'], unique=False)
    op.create_index(op.f('ix_orders_deleted_at'), 'orders', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_orders_exchange_order_id'), 'orders', ['exchange_order_id'], unique=False)
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_index(op.f('ix_orders_is_simulated'), 'orders', ['is_simulated'], unique=False)
    op.create_index(op.f('ix_orders_order_side'), 'orders', ['order_side'], unique=False)
    op.create_index(op.f('ix_orders_order_type'), 'orders', ['order_type'], unique=False)
    op.create_index(op.f('ix_orders_signal_id'), 'orders', ['signal_id'], unique=False)
    op.create_index(op.f('ix_orders_status'), 'orders', ['status'], unique=False)
    op.create_index(op.f('ix_orders_strategy_id'), 'orders', ['strategy_id'], unique=False)
    op.create_index(op.f('ix_orders_updated_at'), 'orders', ['updated_at'], unique=False)
    op.create_index(op.f('ix_orders_user_id'), 'orders', ['user_id'], unique=False)
    op.create_table('trades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('trade_type', sa.Enum('BUY', 'SELL', name='tradetype'), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('price', sa.Numeric(precision=19, scale=8), nullable=False),
    sa.Column('executed_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('commission', sa.Numeric(precision=19, scale=8), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_trade_order_id', 'trades', ['order_id'], unique=False)
    op.create_index('ix_trade_user_id_symbol_executed_at', 'trades', ['user_id', 'symbol', 'executed_at'], unique=False)
    op.create_index(op.f('ix_trades_deleted_at'), 'trades', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_trades_executed_at'), 'trades', ['executed_at'], unique=False)
    op.create_index(op.f('ix_trades_id'), 'trades', ['id'], unique=False)
    op.create_index(op.f('ix_trades_order_id'), 'trades', ['order_id'], unique=False)
    op.create_index(op.f('ix_trades_symbol'), 'trades', ['symbol'], unique=False)
    op.create_index(op.f('ix_trades_user_id'), 'trades', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_trades_user_id'), table_name='trades')
    op.drop_index(op.f('ix_trades_symbol'), table_name='trades')
    op.drop_index(op.f('ix_trades_order_id'), table_name='trades')
    op.drop_index(op.f('ix_trades_id'), table_name='trades')
    op.drop_index(op.f('ix_trades_executed_at'), table_name='trades')
    op.drop_index(op.f('ix_trades_deleted_at'), table_name='trades')
    op.drop_index('ix_trade_user_id_symbol_executed_at', table_name='trades')
    op.drop_index('ix_trade_order_id', table_name='trades')
    op.drop_table('trades')
    op.drop_index(op.f('ix_orders_user_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_updated_at'), table_name='orders')
    op.drop_index(op.f('ix_orders_strategy_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_status'), table_name='orders')
    op.drop_index(op.f('ix_orders_signal_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_order_type'), table_name='orders')
    op.drop_index(op.f('ix_orders_order_side'), table_name='orders')
    op.drop_index(op.f('ix_orders_is_simulated'), table_name='orders')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_exchange_order_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_deleted_at'), table_name='orders')
    op.drop_index(op.f('ix_orders_created_at'), table_name='orders')
    op.drop_index(op.f('ix_orders_client_order_id'), table_name='orders')
    op.drop_index(op.f('ix_orders_asset_id'), table_name='orders')
    op.drop_index('ix_order_user_status', table_name='orders')
    op.drop_index('ix_order_exchange_id', table_name='orders')
    op.drop_index('ix_order_asset_status', table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_signals_timestamp'), table_name='signals')
    op.drop_index(op.f('ix_signals_signal_type'), table_name='signals')
    op.drop_index(op.f('ix_signals_id'), table_name='signals')
    op.drop_index(op.f('ix_signals_deleted_at'), table_name='signals')
    op.drop_index('ix_signal_strategy_timestamp', table_name='signals')
    op.drop_index('ix_signal_asset_strategy_timestamp', table_name='signals')
    op.drop_table('signals')
    op.drop_index(op.f('ix_backtest_results_strategy_id'), table_name='backtest_results')
    op.drop_index(op.f('ix_backtest_results_id'), table_name='backtest_results')
    op.drop_index(op.f('ix_backtest_results_created_at'), table_name='backtest_results')
    op.drop_index('ix_backtest_result_strategy_id_created_at', table_name='backtest_results')
    op.drop_table('backtest_results')
    op.drop_index('ix_strategy_user_id_name', table_name='strategies')
    op.drop_index('ix_strategy_name', table_name='strategies')
    op.drop_index(op.f('ix_strategies_user_id'), table_name='strategies')
    op.drop_index(op.f('ix_strategies_name'), table_name='strategies')
    op.drop_index(op.f('ix_strategies_id'), table_name='strategies')
    op.drop_index(op.f('ix_strategies_deleted_at'), table_name='strategies')
    op.drop_table('strategies')
    op.drop_index('ix_price_data_timestamp', table_name='price_data')
    op.drop_index(op.f('ix_price_data_source'), table_name='price_data')
    op.drop_index(op.f('ix_price_data_id'), table_name='price_data')
    op.drop_index('ix_price_data_asset_id_timestamp_source', table_name='price_data')
    op.drop_table('price_data')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_deleted_at'), table_name='users')
    op.drop_index('ix_user_username', table_name='users')
    op.drop_index('ix_user_email', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_assets_symbol'), table_name='assets')
    op.drop_index(op.f('ix_assets_id'), table_name='assets')
    op.drop_index(op.f('ix_assets_exchange'), table_name='assets')
    op.drop_index(op.f('ix_assets_deleted_at'), table_name='assets')
    op.drop_index(op.f('ix_assets_asset_type'), table_name='assets')
    op.drop_index('ix_asset_type', table_name='assets')
    op.drop_index('ix_asset_symbol', table_name='assets')
    op.drop_index('ix_asset_exchange', table_name='assets')
    op.drop_table('assets')
    # ### end Alembic commands ###
